#include <bits/stdc++.h>

#define mod 1000000007
#define inf 1000000000000
#define MAX 100001
#define ll long long int
#define ss(n) scanf("%lld", &n)
#define ssf(n) scanf("%lf", &n)
using namespace std;
//prefix stores prefix sums
//best array stores max contiguous sub-array of each size
ll A[MAX], dp[105][1005], prefix[MAX], best[1001];
int main()
{
    ll n, m, length, i, j, k;
    ss(n);ss(m);
    for(i=0;i<=n;i++)
        for(j=0;j<=m;j++)
        dp[i][j]=0;
    for(k=1;k<=n;k++)
    {
        ss(length);
        for(i=0;i<length;i++)
            ss(A[i]);
        prefix[0]=0;
        for(i=0;i<length;i++)
            prefix[i+1]=prefix[i]+A[i];
        for(i=1;i<=m;i++)
            best[i]=-inf;
        best[0]=0;
        for(i=1;i<=length;i++)
        for(j=i;j<i+m&&j<=length;j++)
        {
            best[j-i+1]=max(best[j-i+1], prefix[j]-prefix[i-1]);
        }
        for (int j=0;j<=m;j++)//j is items already in the box
		for (int take=0;j+take<=m;take++)//Taking best for sub-arrays of all sizes
			dp[k][j+take]=max(dp[k][j+take],dp[k-1][j]+best[take]);
    }
    printf("%lld\n", dp[n][m]);
} 
