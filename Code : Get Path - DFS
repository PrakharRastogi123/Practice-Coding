#include <iostream>
using namespace std;
void dfs(int **arr,int V,int sv,int ev,bool *visit,int *output,int idx){
  visit[sv]=true;
  output[idx]=sv;
    idx++;
    if(sv==ev){
        for(int i=idx-1;i>=0;i--){
            cout<<output[i]<<" ";
        }
        return;
    }
    for(int i=0;i<V;i++){
        if(i==sv){
            continue;
        }
        if(arr[sv][i]==1){
            if(visit[i]==true){
                continue;
            }
          dfs(arr,V,i,ev,visit,output,idx);  
        }
    }
}

int main()
{
  int V, E, tempX, tempY;
  cin >> V >> E;
  int **arr=new int*[V];
    for(int i=0;i<V;i++){
        arr[i]=new int[V];
        for(int j=0;j<V;j++){
            arr[i][j]=0;
        }
    }
    int f,s;
    for(int i=0;i<E;i++){
        cin>>f>>s;
        arr[f][s]=1;
        arr[s][f]=1;
    }
    bool *visit=new bool[V];
    for(int i=0;i<V;i++){
        visit[i]=false;
    }
    int *output=new int[V];
    int sv,ev;cin>>sv>>ev;
    dfs(arr,V,sv,ev,visit,output,0);
    
    
    delete [] visit;
    for(int i=0;i<V;i++){
        delete[] arr[i];
    }
    delete [] arr;
  return 0;
} 
