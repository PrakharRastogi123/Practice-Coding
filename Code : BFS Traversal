#include <iostream>
using namespace std;
#include <queue>
void dfs(int **arr,int V,int sv){
    bool *v=new bool[V];
    for(int i=0;i<V;i++){
        v[i]=false;
    }
    queue<int> q;
    q.push(sv);
    v[sv]=true;
    while(!q.empty()){
        int cv=q.front();
        q.pop();
        cout<<cv<<" ";
        for(int i=0;i<V;i++){
            if(cv==i){
                continue;
            }
            if(arr[cv][i]==1 && !v[i]){
                q.push(i);
                v[i]=true;
            }
        }
    }
    delete [] v;
}
int main() {
    int V, E;
    cin >> V >> E;
    int **arr=new int*[V];
    for(int i=0;i<V;i++){
        arr[i]=new int[V];
        for(int j=0;j<V;j++){
            arr[i][j]=0;
        }
    }
    while(E--){
        int f,s;cin>>f>>s;
        arr[f][s]=1;
        arr[s][f]=1;
    }
    dfs(arr,V,0);
for(int i=0;i<V;i++){
    delete [] arr[i];
}
    delete [] arr;
  return 0;
} 
