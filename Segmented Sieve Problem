#include <bits/stdc++.h>
using namespace std;
#define MAX 100001
typedef long long ll;
vector<ll> sieve(){
   // cout<<"pula";
    //cout<<"pula";
  bool isprime[MAX];
  for(int i=0;i<MAX;i++){
    isprime[i]=true;
  }
  for(int i=2;i*i<MAX;i++){
    if(isprime[i]==true){
      for(int j=i*i;j<MAX;j+=i){
        isprime[j]=false;
      }
    }
  }
  vector <ll> prime;
  prime.push_back(2);
  for(int i=3;i<MAX;i+=2){
    if(isprime[i]==true){
      prime.push_back(i);
    }
  }
  return prime;
}
void printprimes(ll l,ll r,vector<ll> prime){
  bool isprime[r-l+1];
  for(ll i=0;i<=r-l;i++){
    isprime[i]=true;
  }
  for(ll i=0;prime[i]*prime[i]<=r;i++){
    ll currprime=prime[i];
    ll base = (l/currprime)*currprime;
    if(base<l){
      base= base+currprime;
    }
    for(ll j=base;j<=r;j+=currprime){
        isprime[j-l]=false;
    }
    if(base==currprime){
      isprime[base-l]=true;
    }
  }
  for(ll i=0;i<=r-l;i++){
    if(isprime[i]==true){
      cout<<i+l<<endl;
    }
  }
}
int main()
{
  vector <ll> prime=sieve();
  //cout<<"pula";
	int t;cin>>t;
    while(t--){
    ll l,r;
      cin>>l>>r;
    //  cout<<"pula";
      printprimes(l,r,prime);
  }
	return 0;
} 
