#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<ll> getFactorization(ll x,ll lpd[])
{
    vector<ll> ret;
    int cnt=0;
    while (x != 1)
    {
        if(cnt==0){
                ret.push_back(lpd[x]);
                cnt++;
        }
        if(lpd[x]!=ret[ret.size()-1]){
            ret.push_back(lpd[x]);
        }
        x = x / lpd[x];
    }
    return ret;
}
int main() {
ll n;cin>>n;
 ll *lpd=new ll[n+1];
  for(ll i=0;i<=n;i++){
    lpd[i]=i;
  }
  for(ll i=2;i<=n;i++){
    if(lpd[i]==i){
      for(ll j=2*i;j<=n;j+=i){
        if(lpd[j]==j) lpd[j]=i;
      }
    }
  }

  bool *arr=new bool[n+1];
  for(ll i=0;i<=n;i++){
    arr[i]=false;
  }
for(ll i=n;i>=1;i--){
  vector<ll> v;
  if(arr[i]==true){
    continue;
  }
vector <ll> d=getFactorization(i,lpd);
  for(ll j=0;j<d.size();j++){
    ll k=i;
    while(k>0){
        if(arr[i]==false && arr[i]%d[j]==0){
            arr[i]=true;
            v.push_back(i);
        }
        k-=d[j];
        if(k>0 && arr[k]==false){
        arr[k]=true;
        v.push_back(k);}
    }
  }
 sort(v.begin(),v.end(),greater<ll> ());
    for(ll it=0;it<v.size();it++){
     cout<<v[it]<<" ";
    }
}
  if(n!=0) cout<<1;
  delete []lpd;
delete []arr;
}
