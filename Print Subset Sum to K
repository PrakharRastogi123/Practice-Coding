void p(int input[], int size, int k,int output[],int m){
  if(size==0){
    if(k==0 && m==3){
      for(int i=0;i<m;i++){
        cout<<output[i]<<" ";
      }
      cout<<endl;
      return;
    }
    if(m!=3){
        return;
    }
    if(k!=0){
      return;
    }
  }
  p(input+1,size-1,k,output,m);
  int newoutput[m+1];
  int i=0;
  for(i=0;i<m;i++){
    newoutput[i]=output[i];
  }
  newoutput[i]=input[0];
  p(input+1,size-1,k-input[0],newoutput,m+1);
} 
void printSubsetSumToK(int input[], int size, int k) {
    // Write your code here
  int m=0;
  int *output=new int[m];
  p(input,size,k,output,m);
} 

#include <iostream>
using namespace std;
#include "solution.h"

int main() {
  int input[1000],length,k;
  cin >> length;
  for(int i=0; i < length; i++)
    cin >> input[i];
  cin>>k;
  printSubsetSumToK(input, length,k);
} 
